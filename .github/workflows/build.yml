# Custom workflow

name: Custom_code_build

# Controls when the workflow will run
on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Clone additional repositories and get external libraries from Artifactory
      - name: Clone repos and get libraries
        run: |
          git clone https://${{secrets.CLONE_TOKEN}}@github.com/vortex75-c64/cli_common_eai_nso
          mv cli_common_eai_nso/* .
          rm -rf cli_common_eai_nso
          git clone https://${{secrets.CLONE_TOKEN}}@github.com/vortex75-c64/cli_common_nso
          git clone https://${{secrets.CLONE_TOKEN}}@github.com/vortex75-c64/cli_common_nso_datanet
          curl -H "X-JFrog-Art-Api:${{secrets.ARTIFACT_TOKEN}}" -O "https://vortex75c64.jfrog.io/artifactory/binary-generic-local/library.zip"
          unzip library.zip

      # Setup Java 11
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      # Build cli_common_nso
      - name: Build cli_common_nso with Maven
        run: |
          cd cli_common_nso
          mvn validate clean install

      # Build cli_common_nso_datanet
      - name: Build cli_common_nso_datanet with Maven
        run: |
          cd cli_common_nso_datanet
          mvn validate clean install

      # Build cli_common_eai_nso
      - name: Build cli_common_eai_nso with Ant
        run: |
          ant -noclasspath -buildfile build.xml build_production

      # Check the generated artifact, assign the version and publish to Artifactory
      - name: Store versioned artifacts into Artifactory
        run: |
          ls -l library
          mkdir deploy
          cp library/nso_eai_client.jar deploy/nso_eai_client_${GITHUB_RUN_NUMBER}.jar
          ls -l deploy
          curl -H "X-JFrog-Art-Api:${{secrets.ARTIFACT_TOKEN}}" -T deploy/nso_eai_client_${GITHUB_RUN_NUMBER}.jar "https://vortex75c64.jfrog.io/artifactory/binary-generic-local/deploy/nso_eai_client_${GITHUB_RUN_NUMBER}.jar"


  # Deploy environments
  deployDEV:
    name: Deploy to DEV
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: DEV
      url: 'iview-dev.example.com'
    steps:
      - name: deploy
        run: |
          echo "Deploy on DEV, file name is nso_eai_client_DEV_${GITHUB_RUN_NUMBER}.jar"

  deployTEST:
    name: Deploy to TEST
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: TEST
      url: 'iview-test.example.com'
    steps:
      - name: deploy
        run: |
          echo "Deploy on TEST, file name is nso_eai_client_TEST_${GITHUB_RUN_NUMBER}.jar"
